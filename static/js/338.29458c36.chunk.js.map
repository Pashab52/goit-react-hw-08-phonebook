{"version":3,"file":"static/js/338.29458c36.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Contacts.module.css?8552","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/ModalForm/ModalForm.module.css?c0df","components/ModalForm/ModalForm.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contacts_title__HJPSk\",\"contactsTitleWrap\":\"Contacts_contactsTitleWrap__vYTVi\",\"contactsTitle\":\"Contacts_contactsTitle__bCRKZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactInput\":\"ContactForm_contactInput__z6XOX\",\"contactBtn\":\"ContactForm_contactBtn__Hbm5v\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterData) => {\n    const normalizedFilter = filterData.toLowerCase();\n    const filterContactsData = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return filterContactsData;\n  }\n);\n","import { useState } from \"react\";\nimport css from './ContactForm.module.css'\n// import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from \"redux/contacts/operations\";  \nimport { selectContacts } from \"redux/contacts/selectors\";\n// import { fetchContacts } from \"redux/operations\";\n\n\nexport function ContactForm() {\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleInputChange = event => {\n\n    switch (event.currentTarget.name) {\n\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      \n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n      \n      default:\n        console.warn('error');\n        }  \n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const identicalContact = contacts.some(\n      contact => contact.name === name\n    );\n\n    identicalContact\n      ? alert(`${name} is already in contacts`)\n      : onNoIdenticalContact();\n  };\n\n  function onNoIdenticalContact() {\n    \n    dispatch(addContact({ name, number }));\n \n    reset();\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n \n    return (\n      <form\n        className={css.contactForm}\n        onSubmit={handleFormSubmit}\n        autoComplete=\"off\"\n      >\n        <label>\n          Name <br />\n          <input\n            className={css.contactInput}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            maxLength=\"30\"\n            required\n            value={name}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <label>\n          Number <br />\n          <input\n            className={css.contactInput}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            maxLength=\"20\"\n            required\n            value={number}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <button className={css.contactBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contIcon\":\"ContactItem_contIcon__sakIW\",\"contText\":\"ContactItem_contText__a3Qsu\",\"contBtn\":\"ContactItem_contBtn__R6maD\",\"contBtnEdit\":\"ContactItem_contBtnEdit__fD6zg ContactItem_contBtn__R6maD\"};","import PropTypes from 'prop-types';\nimport css from './ContactItem.module.css'\nimport { useDispatch} from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations'; \nimport { BiUser, BiSolidPhone } from 'react-icons/bi';\nimport { FaTimes, FaPen } from 'react-icons/fa';\n\n\n\nexport function ContactItem (props) {\n  const dispatch = useDispatch();\n\n \n  \n    return (\n      <li className={css.contactItem}>\n        <div className={css.contText}>\n          <BiUser className={css.contIcon} />\n          <p>{props.name}</p>\n        </div>\n        <div className={css.contText}>\n          <BiSolidPhone className={css.contIcon} />\n          <p>{props.number}</p>\n        </div>\n        <button\n          className={css.contBtnEdit}\n          type=\"button\"\n          onClick={() => props.onEditBtnClick(props.contact)}\n        >\n          <FaPen\n            style={{\n              width: '26',\n            }}\n          />\n        </button>\n        <button\n          className={css.contBtn}\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(props.id))}\n        >\n          <FaTimes\n            style={{\n              width: '26',\n            }}\n          />\n        </button>\n      </li>\n    );\n  }\n\n ContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  };","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  selectFilterContacts,\n} from 'redux/contacts/selectors';\n\n\nexport function ContactList({ onEditBtnClick }) {\n  const filterContactsData = useSelector(selectFilterContacts);\n\n  return (\n    <ul className={CSS.contctList}>\n      {filterContactsData.map(contact => {\n        return (\n          <ContactItem\n            name={contact.name}\n            number={contact.number}\n            key={contact.id}\n            id={contact.id}\n            contact={contact}\n            onEditBtnClick={onEditBtnClick}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","\n// import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { useSelector, useDispatch} from 'react-redux';\n\n  \nexport function Filter() {\nconst filterData = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  function handleFilterChange(event) {\n    dispatch(setFilter(event.currentTarget.value))\n  }\n \n    return (\n      <div className={css.filter}>\n        <label>\n          Find contacts by name <br />\n          <input\n            className={css.filterInput}\n            type=\"text\"\n            name=\"name\"\n            value={filterData}\n            onChange={handleFilterChange}\n          />\n        </label>\n      </div>\n    );\n}\n  \n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__DJDMv\",\"overlay\":\"Modal_overlay__r63M6\"};","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Modal.module.css'\n\nexport function Modal (props) {\n\n  \n\n  useEffect(() => {\n    document.body.classList.add('modal-open');\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n        document.body.classList.remove('modal-open');\n      window.removeEventListener('keydown', handleKeyDown);\n    }\n  })\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      props.onModalClose();\n    }\n  };\n\n const handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      props.onModalClose();\n    }\n  };\n\n  const modalRoot = document.querySelector('#modal-root');\n\n    return createPortal(\n      <div className={css.overlay} onClick={handleOverlayClick}>\n        <div className={css.modal}>{props.children}</div>\n      </div>,\n      modalRoot\n    );\n}\n\n  Modal.propTypes = {\n    onModalClose: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n  };","// extracted by mini-css-extract-plugin\nexport default {\"modalLabel\":\"ModalForm_modalLabel__Np9tD\",\"modalInput\":\"ModalForm_modalInput__1pVKU\",\"modalForm\":\"ModalForm_modalForm__m17Aq\",\"modalTitle\":\"ModalForm_modalTitle__qgrmc\",\"modalCloseBtn\":\"ModalForm_modalCloseBtn__gITG7\"};","import { useState } from 'react';\nimport css from './ModalForm.module.css'\nimport { FaTimes } from 'react-icons/fa';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\n\nexport function ModalForm(props) {\n  const [name, setName] = useState(props.contact.name);\n  const [number, setNumber] = useState(props.contact.number);\n  const id = props.contact.id;\n\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleInputChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n\n      default:\n        console.warn('error');\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const identicalContact = contacts.some(contact => contact.name === name);\n\n    identicalContact && props.contact.number === number\n      ? alert(`${name} is already in contacts`)\n      : onNoIdenticalContact();\n  };\n\n  function onNoIdenticalContact() {\n    dispatch(editContact({ id, name, number }));\n    props.onModalClose()\n    reset();\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.modalForm} onSubmit={handleFormSubmit}>\n      <button\n        className={css.modalCloseBtn}\n        type=\"button\"\n        onClick={props.onModalClose}\n      >\n        <FaTimes size={14} />\n      </button>\n      <h2 className={css.modalTitle}>Edit contact</h2>\n      <label className={css.modalLabel}>\n        Name <br />\n        <input\n          className={css.modalInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          maxLength=\"30\"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <label>\n        Number <br />\n        <input\n          className={css.modalInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          maxLength=\"20\"\n          required\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <button type=\"submit\">Save</button>\n    </form>\n  );\n}\n","import { Helmet } from 'react-helmet';\nimport css from './Contacts.module.css'\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect, useState } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Modal } from 'components/Modal/Modal';\nimport { ModalForm } from 'components/ModalForm/ModalForm';\n\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\nconst [showModal, setShowModal] = useState(false);\nconst [editContact, setEditContact] = useState({});\n\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n\n    dispatch(fetchContacts());\n\n  }, [dispatch]);\n\n\n  const handleEditClick = (contact) => {\n      setEditContact(contact);\n      setShowModal(true);\n   };\n\n\n  \n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <ContactForm />\n      <Filter />\n\n      <div className={css.contactsTitleWrap}>\n        <h2 className={css.contactsTitle}>Contacts</h2>\n        {isLoading && <Loader />}\n      </div>\n\n      {error && <p>Contacts not found</p>}\n\n      <ContactList onEditBtnClick={handleEditClick} />\n\n      {showModal && (\n        <Modal onModalClose={closeModal}>\n          <ModalForm contact={editContact} onModalClose={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectFilterContacts","createSelector","filterData","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","event","currentTarget","value","console","warn","reset","className","css","onSubmit","preventDefault","some","alert","addContact","autoComplete","type","pattern","title","maxLength","required","onChange","ContactItem","props","onClick","onEditBtnClick","style","width","deleteContact","id","ContactList","filterContactsData","CSS","contctList","map","Filter","setFilter","Modal","useEffect","document","body","classList","add","window","addEventListener","handleKeyDown","remove","removeEventListener","code","onModalClose","modalRoot","querySelector","createPortal","target","children","ModalForm","editContact","size","showModal","setShowModal","setEditContact","fetchContacts","closeModal","Helmet","Loader"],"sourceRoot":""}